[{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Biocomplexity Institute. Author, copyright holder. Micah Iserman. Maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Biocomplexity Institute (2022). sec: Securities Exchange Commission APIs. R package version 0.0.1.","code":"@Manual{,   title = {sec: Securities and Exchange Commission APIs},   author = {{Biocomplexity Institute}},   year = {2022},   note = {R package version 0.0.1}, }"},{"path":"/index.html","id":"securities-and-exchange-commission-apis","dir":"","previous_headings":"","what":"Securities and Exchange Commission APIs","title":"Securities and Exchange Commission APIs","text":"R package interact Securities Exchange Commission APIs.","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Securities and Exchange Commission APIs","text":"Download R r-project.org, install package R console: load package:","code":"# install.packages('remotes') remotes::install_github('uva-bi-sdad/sec') library(sec)"},{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2021 community authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"/reference/sec-package.html","id":null,"dir":"Reference","previous_headings":"","what":"sec: Securities and Exchange Commission APIs — sec-package","title":"sec: Securities and Exchange Commission APIs — sec-package","text":"Search companies, download parse Securities Exchange Commission (SEC) filings.","code":""},{"path":"/reference/sec-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"sec: Securities and Exchange Commission APIs — sec-package","text":"Maintainer: Micah Iserman micah.iserman@gmail.com Authors: Biocomplexity Institute [copyright holder]","code":""},{"path":"/reference/sec_companies.html","id":null,"dir":"Reference","previous_headings":"","what":"Download Company Information — sec_companies","title":"Download Company Information — sec_companies","text":"Retrieve information companies.","code":""},{"path":"/reference/sec_companies.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download Company Information — sec_companies","text":"","code":"sec_companies(ciks, type = \"submissions\", out = tempdir(), load = TRUE,   overwrite = FALSE, user = Sys.getenv(\"SEC_USER\"), verbose = TRUE)"},{"path":"/reference/sec_companies.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download Company Information — sec_companies","text":"ciks vector Central Index Keys, data.frame ciks column. type Type information collect, submissions, includes things like Standard Industrial Classification, ticker, previous names, well information recent filings, facts, including financial Path directory save filings. filing saved within subdirectory: {}/{cik}/{SEC Accession Number}. load Logical; TRUE, read downloaded info file. overwrite Logical; TRUE, download info file even already exists. user User agent string (e.g., \"Company Name AdminContact@example.com\"); defaults SEC_USER environment variable, can set Sys.setenv (e.g., Sys.setenv(SEC_USER = \"...\")). verbose Logical; FALSE, show status updates.","code":""},{"path":"/reference/sec_companies.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download Company Information — sec_companies","text":"invisible list named entries successful CIK load TRUE, vector HTTP status codes otherwise.","code":""},{"path":[]},{"path":"/reference/sec_companies.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download Company Information — sec_companies","text":"","code":"if (FALSE) {  # retrieve information about Pepsico pepsi <- sec_companies(\"0000077476\") pepsi$`0000077476`[1:10]  # retrieve financial information about Pepsico pepsi_facts <- sec_companies(\"0000077476\", \"facts\") pepsi_facts$`0000077476`$facts$`us-gaap`$Revenues }"},{"path":"/reference/sec_download.html","id":null,"dir":"Reference","previous_headings":"","what":"Download Filings — sec_download","title":"Download Filings — sec_download","text":"Download SEC filings based Central Index Key (CIK) document ID (returned sec_search.","code":""},{"path":"/reference/sec_download.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download Filings — sec_download","text":"","code":"sec_download(ciks, out, ids = NULL, complete = FALSE,   user = Sys.getenv(\"SEC_USER\"), verbose = TRUE)"},{"path":"/reference/sec_download.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download Filings — sec_download","text":"ciks vector Central Index Keys, data.frame ciks column. Path directory save filings. filing saved within subdirectory: {}/{cik}/{SEC Accession Number}. ids vector document IDs. combinations SEC Accession Numbers file names, separated colon (e.g., \"0001564590-22-032043:gs-424b2.htm\"). file name included, default complete submission text file (e.g., \"0001564590-22-032043.txt\"). complete Logical; TRUE, download complete submission text file rather another files specified colon ids. user User agent string (e.g., \"Company Name AdminContact@example.com\"); defaults SEC_USER environment variable, can set Sys.setenv (e.g., Sys.setenv(SEC_USER = \"...\")). verbose Logical; FALSE, show status updates.","code":""},{"path":"/reference/sec_download.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download Filings — sec_download","text":"invisible vector HTTP status codes.","code":""},{"path":[]},{"path":"/reference/sec_download.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download Filings — sec_download","text":"","code":"if (FALSE) {  # search for filings based on SIC forms <- sec_search(SICs = 2080, forms = \"10-K\", limit = 100)  # download some of those filings sec_download(forms[1:3, ], out = tempdir()) }"},{"path":"/reference/sec_search.html","id":null,"dir":"Reference","previous_headings":"","what":"Search for Filings — sec_search","title":"Search for Filings — sec_search","text":"Search forms keywords, Central Index Keys, /Standard Industrial Classification codes, filed 2001.","code":""},{"path":"/reference/sec_search.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Search for Filings — sec_search","text":"","code":"sec_search(query = NULL, entity = NULL, CIKs = NULL, SICs = NULL,   forms = NULL, date_to = NULL, date_from = \"2001-01-01\",   outFile = NULL, overwrite = TRUE, start = 0, limit = Inf,   verbose = TRUE)"},{"path":"/reference/sec_search.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Search for Filings — sec_search","text":"query character words phrases search within form (e.g., grape \"fruit juice\"). entity character name, ticker, Central Index Key. CIKs vector Central Index Keys (e.g., c(0000317540, 0000077476)). SICs vector Standard Industrial Classification codes (e.g., 2080). forms vector forms include (e.g., \"10-K\"). date_to Latest date include results (e.g., \"2019-01-01\"); defaults current. date_from Earliest date include results ; defaults earliest available: \"2001-01-01\". outFile Path file write results . overwrite Logical; FALSE, read existing results file rather executing search. start Number results skip. limit Maximum number results return, steps 100. verbose Logical; FALSE, display status messages.","code":""},{"path":"/reference/sec_search.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Search for Filings — sec_search","text":"data.frame results.","code":""},{"path":[]},{"path":"/reference/sec_search.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Search for Filings — sec_search","text":"","code":"if (FALSE) {  # search for 10-K filings by beverage companies results <- sec_search(SICs = 2080, forms = \"10-K\", limit = 100) }"},{"path":"/reference/sec_search_companies.html","id":null,"dir":"Reference","previous_headings":"","what":"Search for Companies (Legacy) — sec_search_companies","title":"Search for Companies (Legacy) — sec_search_companies","text":"Search companies based Standard Industrial Classification.","code":""},{"path":"/reference/sec_search_companies.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Search for Companies (Legacy) — sec_search_companies","text":"","code":"sec_search_companies(SIC, start = 0, limit = Inf,   user = Sys.getenv(\"SEC_USER\"), verbose = TRUE)"},{"path":"/reference/sec_search_companies.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Search for Companies (Legacy) — sec_search_companies","text":"SIC Standard Industrial Classification code (e.g., 2080). start Number results skip. limit Maximum number results return, steps 100. user User agent string (e.g., \"Company Name AdminContact@example.com\"); defaults SEC_USER environment variable, can set Sys.setenv (e.g., Sys.setenv(SEC_USER = \"...\")). verbose Logical; FALSE, show status updates.","code":""},{"path":"/reference/sec_search_companies.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Search for Companies (Legacy) — sec_search_companies","text":"data.frame results, columns CIK (Central Index Key), Company, Location.","code":""},{"path":[]},{"path":"/reference/sec_search_companies.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Search for Companies (Legacy) — sec_search_companies","text":"","code":"if (FALSE) {  # get a list of beverage companies sec_search_companies(2080) }"}]
